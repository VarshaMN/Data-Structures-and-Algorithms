
class Solution {
    // Function to find the shortest path from a source node to all other nodes
    public int[] shortestPath(ArrayList<ArrayList<Integer>> adj, int src) {
        // code here
        int[] dist=new int[adj.size()];
        int n=adj.size();
        Arrays.fill(dist,(int)(1e9));
        Queue<Integer> q=new LinkedList<>();
        q.add(src);
        dist[src]=0;
        
        while(!q.isEmpty()){
            int node=q.remove();
            for(int it:adj.get(node)){
                if(dist[node]+1<dist[it]){
                    dist[it]=dist[node]+1;
                    q.add(it);
                }
            }
            
        }
        for(int i=0;i<n;i++){
            if(dist[i]==1e9)
             dist[i]=-1;
        }
        return dist;
        
    }
}
