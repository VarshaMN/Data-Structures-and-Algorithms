// User function Template for Java

class Solution {
    public int longestCommonSubstr(String s1, String s2) {
        // code here
        int n=s1.length();
        int m=s2.length();
        int[][] dp=new int[n+1][m+1];
        
        for(int i=0;i<=n;i++){
            dp[i][0]=0;
        }
        for(int j=0;j<=m;j++){
            dp[0][j]=0;
        }
        int ans=0;
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                if(s1.charAt(i-1)==s2.charAt(j-1)){
                    dp[i][j]=1+dp[i-1][j-1];
                    ans=Math.max(dp[i][j],ans);
                }
                else dp[i][j]=0;
                
            }
        }
        return ans;
        
    }
}

// dp array is filled row wise and max ans will be stored anywhere in the array 








//space optimized method
public int longestCommonSubstr(String s1, String s2) {
        // code here
        int n=s1.length();
        int m=s2.length();
        int[] prev=new int[m+1];
        Arrays.fill(prev,0);
        int[] cur=new int[m+1];
        Arrays.fill(cur,0);
        
        
        int ans=0;
        for(int i=1;i<=n;i++){
            cur = new int[m + 1]; 
            for(int j=1;j<=m;j++){
                if(s1.charAt(i-1)==s2.charAt(j-1)){
                    cur[j]=1+prev[j-1];
                    ans=Math.max(cur[j],ans);
                }
                else cur[j]=0;
                
            }
            prev=cur;
        }
        return ans;
        
    }
